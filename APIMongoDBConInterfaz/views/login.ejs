<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
  <meta name="generator" content="Hugo 0.87.0">
  <title>LOGIN CON NODE + JWT</title>

  <!-- Bootstrap core CSS -->
  <link href="css/bootstrap.min.css" rel="stylesheet">

  <!-- Custom styles for this template -->
  <link href="css/signin.css" rel="stylesheet">
  <link href="css/styles.css" rel="stylesheet">
</head>
<body class="text-center">

  <main class="form-signin text-center shadow-lg p-3 mb-5">

    <form id="formLogin" action="/login/protected" method="POST">
      <img class="mb-4" src="img/bootstrap-logo.svg" alt="" width="72" height="57">
      <div class="form-floating">
        <input type="text" class="form-control" id="user" name="user" placeholder="User">
        <input type="hidden" id="token" name="token">
        <label for="user">User</label>
      </div>
      <div class="form-floating">
        <input type="password" class="form-control" id="pass" name="pass" placeholder="Password">
        <label for="pass">Password</label>
      </div>
      <div class="form-floating">
        <input type="text" class="form-control" id="userId" name="userId" placeholder="User ID" readonly>
        <label for="userId">User ID</label>
      </div>
      <button class="w-100 btn btn-lg btn-primary" type="submit">Login</button>
    </form>

    <!-- Botón para generar JWT -->
    <button id="btnGenerateJWT" class="w-50 btn btn-lg btn-success mt-3">Generar JWT</button>

    <!-- Botón para verificar JWT -->
    <button id="btnVerifyJWT" class="w-50 btn btn-lg btn-info mt-3">Verificar JWT</button>

    <br>
    <a href="/register" type="button" class="w-100 btn btn-lg btn-bd-primary">Registrarse</a>
  </main>

  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <!-- Script para manejar la generación y verificación de JWT -->
  <script>
    document.getElementById('btnGenerateJWT').addEventListener('click', async () => {
      try {
        // Generar un token sin necesidad de autenticación
        const response = await fetch('/generateToken', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        const result = await response.json();

        // Muestra el token en la consola para verificar
        console.log('Token generado:', result.jwtToken);

        // Almacena el token en el campo oculto
        document.getElementById('token').value = result.jwtToken;

        // Mostrar mensaje
        Swal.fire({
          title: 'Token generado',
          text: 'Se ha generado un token sin iniciar sesión.',
          icon: 'success',
          showConfirmButton: true,
        });
      } catch (error) {
        console.error('Error al generar el JWT:', error);
      }
    });

    document.getElementById('btnVerifyJWT').addEventListener('click', async () => {
      try {
        // Obtener el token del campo oculto
        const token = document.getElementById('token').value;

        if (!token) {
          Swal.fire({
            title: 'Token no encontrado',
            text: 'Genera un token antes de verificar.',
            icon: 'warning',
            showConfirmButton: true,
          });
          return;
        }

        // Mostrar el token en el campo de userId
        document.getElementById('userId').value = token;

        // Realizar la verificación del token
        const response = await fetch('/protegido/verify', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`,
          },
        });

        const result = await response.json();
        handleJWTResponse(result);
      } catch (error) {
        console.error('Error al verificar el JWT:', error);
      }
    });
  </script>
</body>
</html>